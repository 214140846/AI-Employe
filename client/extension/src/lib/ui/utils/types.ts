export enum ActionType {
  LOGIN = "LOGIN",
  LOGOUT = "LOGOUT",
  AUTH_STATE_CHANGE = "AUTH_STATE_CHANGE",
  CLIENT_READY = "CLIENT_READY",
  START_RECORDING = "START_RECORDING",
  STOP_RECORDING = "STOP_RECORDING",
  RECORD_SCRIPT_STATUS = "RECORD_SCRIPT_STATUS",
  RECORD_SCRIPT_ACTIVE = "RECORD_SCRIPT_ACTIVE",
  RUN_SCRIPT_STATUS = "RUN_SCRIPT_STATUS",
  RUN_SCRIPT_ACTIVE = "RUN_SCRIPT_ACTIVE",
  RECORD_ACTION = "RECORD_ACTION",
  CREATE_WORKFLOW = "CREATE_WORKFLOW",
  UPDATE_WORKFLOW = "UPDATE_WORKFLOW",
  SETUP_OPENAI_KEY = "SETUP_OPENAI_KEY",
  GET_OPENAI_KEY = "GET_OPENAI_KEY",
  CREATE_WORKFLOW_SUCCESS = "CREATE_WORKFLOW_SUCCESS",
  GET_WORKFLOWS = "GET_WORKFLOWS",
  NEW_MESSAGE = "NEW_MESSAGE",
  AI_RESPONSE_FOR_COMMON_ACTION = "AI_RESPONSE_FOR_COMMON_ACTION",
  AI_RESPONSE_FOR_WORKFLOW_ACTION = "AI_RESPONSE_FOR_WORKFLOW_ACTION",
  WORKFLOW_DONE = "WORKFLOW_DONE",
  TAKE_SCREENSHOT = "TAKE_SCREENSHOT",
  INITIATE_WORKFLOW = "INITIATE_WORKFLOW",
  START_WORKFLOW = "START_WORKFLOW",
  STOP_WORKFLOW = "STOP_WORKFLOW",
  EXECUTE_ACTION = "EXECUTE_ACTION",
  CAPTURE_SCREENSHOT = "CAPTURE_SCREENSHOT",
  GET_HTML_WITH_NODE_IDS = "GET_HTML_WITH_NODE_IDS",
  ANIMATE_CURSOR = "ANIMATE_CURSOR",
  SHOW_MESSAGE_SIDEBAR = "SHOW_MESSAGE_SIDEBAR",
}

export interface MessageContent {
  actionType: ActionType;
  payload?: any;
}
